name: Deploy

on:
  push:
    tags:
      - v[0-9]+.[0-9]+.[0-9]+

jobs:
  version:
    permissions:
      contents: read
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
      short-sha: ${{ steps.version.outputs.short-sha }}
      go-ldflags: ${{ steps.version.outputs.go-ldflags }}
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
          fetch-tags: true
          persist-credentials: false
      - uses: actions/setup-go@v5
        with:
          go-version-file: ./go.mod
          cache: false
      - name: get version numbers
        id: version
        run: |
          echo "short-sha=$(echo ${{ github.sha }} | cut -c 1-7)" >> $GITHUB_OUTPUT
          echo "version=$(go run ./scripts/version.go)" >> $GITHUB_OUTPUT
          echo "go-ldflags=$(go run ./scripts/version.go -g)" >> $GITHUB_OUTPUT
      - name: print version outputs
        run: |
          echo "version: ${{ steps.version.outputs.version }}"
          echo "short-sha: ${{ steps.version.outputs.short-sha }}"
          echo "go-ldflags: ${{ steps.version.outputs.go-ldflags }}"
  push-docker:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    needs: version
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 1
          persist-credentials: false
      - uses: grafana/shared-workflows/actions/build-push-to-dockerhub@93aab2a78de779f87d7c6113c78ff2862992afce # main
        id: push
        with:
          repository: grafana/smtprelay
          platforms: linux/amd64
          push: "true"
          build-args: |-
            GIT_REVISION=${{ needs.version.outputs.short-sha }}
            VERSION=${{ needs.version.outputs.version }}
            "GO_LDFLAGS=${{ needs.version.outputs.go-ldflags }}"
          tags: |-
            ${{ needs.version.outputs.version }}
  deploy-dev:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      id-token: write
    environment:
      name: dev
    needs: [version, push-docker]
    steps:
      - name: Trigger CD workflow
        uses: grafana/shared-workflows/actions/trigger-argo-workflow@93aab2a78de779f87d7c6113c78ff2862992afce # main
        with:
          instance: ops
          namespace: hosted-grafana-cd
          workflow_template: smtprelay
          parameters: |
            dockertag=${{ needs.version.outputs.version }}
